task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

buildscript {
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.BUILD-SNAPSHOT")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'

jar {
    baseName = 'myproject'
    version =  '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter") {
        exclude module: "spring-boot-starter-logging"
    }

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
        exclude module: "spring-boot-starter-logging"

    }
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("org.postgresql:postgresql:9.4-1201-jdbc41")
    compile("io.jsonwebtoken:jjwt:0.7.0")
    compile("net.sf.dozer:dozer:5.4.0")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/webapp'
        }
    }
}

checkstyle {
    toolVersion = '6.7'
}

task npmInstall(type:Exec) {
    workingDir 'src/main/webapp'
    commandLine 'npm', 'install'
}

task webpack(type:Exec, dependsOn:npmInstall) {
    workingDir 'src/main/webapp'
    commandLine 'npm', 'run', 'webpack'
}

tasks.idea {
    dependsOn = [cleanIdeaModule, ideaModule, npmInstall]
}
